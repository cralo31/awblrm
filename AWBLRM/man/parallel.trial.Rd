% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation.R
\name{parallel.trial}
\alias{parallel.trial}
\title{Simulated Dose-finding Trial}
\usage{
parallel.trial(true, n, cores = 1, K, size, cycle_prob, cycle_time,
  target, samples, assessment, fixed, mode, stopping, least, dropout,
  od_control, mcmc_chains = 4, mcmc_samples = 3000)
}
\arguments{
\item{true}{Matrix; Pre-defined true dose-toxicity relationship. The input should be a 2-by-p matrix, with the 1st row being the
p dose levels and the 2nd row being the corresponding probability of DLT.}

\item{n}{Integer; Number of trials to be simulated. Minimum of 1.}

\item{cores}{Integer; Number of cores to utilize for parallel computing. Defaults to 1.}

\item{K}{Integer; Number of treatment cycles considered.}

\item{size}{Integer; Number of patients to enrolled in each cohort.}

\item{cycle_prob}{K-simplex; A vector that contains the true probability of DLT happening in each of the cycles. Sums up to one.}

\item{cycle_time}{Integer; Duration of a single treatment cycle (NOT entire treatment window!). Units are arbitrary.}

\item{target}{The defined target probability of toxicity. For point-estimate-based decision rules, please input a single numeric value.
For interval-estimate-based decision rules, please input a vector indicating the target toxicity range, e.g. c(0.2, 0.33).}

\item{samples}{Integer; The maximum number of patients to be enrolled into the trial. Also serves as the default stopping rule.}

\item{assessment}{Integer; The cycle in which the model is assessed to determine the dose level of the next cohort (1 means the model is assessed
after the completion of the 1st cycle of each cohort, 2 means 2nd cycle...).}

\item{fixed}{Boolean; TRUE if patients in the same cohort are enrolled at the same time. FALSE if the enrollment time of patients in the same
cohort follows a Uniform (0, cycle_time).}

\item{mode}{Integer; Determine which decision rule to implement to perform dose escalation / de-escalation. 1 = Original CRM, 2 = Inverse Point-Estimate,
3 = BLRM, 4 = Ratio. Defaults to 1. For details on the decision rule please refer to the report.}

\item{stopping}{Integer; Defined the stopping criteria. 1 = stop the trial when maximum enrollment is achieved, 2 = stop the trial if at least 12
patients are enrolled and 9 patients have already been treated at the next recommended dose. Defaults to 1.}

\item{least}{Integer; Least amount of patients to enrolled if using the second stopping rule. Defaults to 12, directly impacts "stopping".}

\item{dropout}{Boolean; TRUE if patient dropout time is assumened to follow an exponential distribution with a cumulative probability of 15% at the end
of the treatment window.}

\item{od_control}{Double (0 - 1); Escalation with overdose control. Escalate to the next dose if the probability of overdosing does not exceed the
input probability. No overdose control if od_control is set to 1.}

\item{mcmc_chains}{Integer; Number of chains to consider during MCMC sampling. Defaults to 3.}

\item{mcmc_samples}{Integer; Numbers of samples from the posterior distribution of the betas. Default to 3000 with a burn-in period of 500
samples.}
}
\value{
Returns a list with two sublist.

###########################################################################

The first sublist contains the two information tables of the simulated trials.

The first table provides the allocation of patients and number of DLTs averaged over all simulations.
The second table gives the summary information of the simulations. Below are the meaning of the summary information.

# The first four probabilities sums up to 1.

P(Choose True MTD): Probability of choosing the true MTD as the final recommended dose.

P(Choose Over MTD): Probability of choosing a dose level above the true MTD as the final recommended dose.

P(Choose Under MTD): Probability of choosing a dose level below the true MTD as the final recommended dose.

P(No Selection): Probability of terminating the trial due to all dose levels deemed toxic.

Mean Final Dose: Numeric average of the final recommended dose.

Allo Under / True / Over MTD: Average allocation of patients under / at / over the true MTD during trials.

Total / Prop DLT: Average total number and proportion of patients who had DLT.

Patients Enrolled / Trial Duration: Average number of patients enrolled before meeting stopping criteria
and duration of the trials.

Computation Time: Average computation time of a trial.

###########################################################################

The second sublist gives the detail generated information table of each trial. The last element within the sublist
gives the total computation time of simulated trials.
}
\description{
This function simulates a user defined number of dose-finding trials with the pre-specified design in parallel.
}
\examples{
################################# Example 1 ################################
# Simple uniform 2-cycle treatment design simulation with 4 trials and 4 cores. #

set.seed(1031)
dose1 = rbind(1:5, c(0.05, 0.1, 0.25, 0.4, 0.6))
n1 = 4
cores1 = 4
K1 = 2
size1 = 3
cycle_prob1 = c(0.5, 0.5)
cycle_time1 = 30
samples1 = 36
assessment1 = 1
fixed1 = TRUE
mode1 = 1
stopping1 = 1
least1 = 12
dropout1 = FALSE
od_control1 = 0.8
target1 = 0.25
mcmc_chains = 4
mcmc_samples = 1000

# Simulate 4 trials in parallel with 4 cores according to the defined parameters. #
test = parallel.trial(dose1, n1, cores1, K1, size1, cycle_prob1, cycle_time1, target1, samples1, assessment1,
fixed1, mode1, stopping1, least1, dropout1, od_control1, mcmc_chains, mcmc_samples)

################################# Example 2 ################################
# 3-cycle treatment design simulation with 4 trials and 4 cores. #
# BLRM Decision Rule
# Early Dropout

set.seed(1031)
dose2 = rbind(1:5, c(0.05, 0.1, 0.25, 0.4, 0.6))
n2 = 4
cores2 = 4
K2 = 3
size2 = 3
cycle_prob2 = c(0.25, 0.25, 0.5)
cycle_time2 = 30
samples2 = 36
assessment2 = 2
fixed2 = TRUE
mode2 = 3
stopping2 = 2
least2 = 12
dropout2 = TRUE
od_control2 = 0.75
target2 = c(0.2, 0.33)
mcmc_chains = 3
mcmc_samples = 2000

# Simulate 4 trials in parallel with 4 cores according to the defined parameters. #
test = parallel.trial(dose2, n2, cores2, K2, size2, cycle_prob2, cycle_time2, target2, samples2, assessment2,
fixed2, mode2, stopping2, least2, dropout2, od_control2, mcmc_chains, mcmc_samples)

}
